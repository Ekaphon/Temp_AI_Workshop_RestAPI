{
    "swagger": "2.0",
    "info": {
        "description": "Simple API for authentication using Fiber, GORM and SQLite",
        "title": "Temp AI Workshop REST API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
        }
    },
    "paths": {
        "/": {
            "get": {
                "summary": "Health / Hello",
                "description": "Return a simple hello message",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/HelloResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "summary": "Register user",
                "description": "Register a new user. Password will be hashed with bcrypt.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created",
                        "schema": {
                            "$ref": "#/definitions/RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request or email already exists"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "summary": "Login user",
                "description": "Authenticate user and return JWT token",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "schema": {
                            "$ref": "#/definitions/AuthResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "summary": "Get current user's profile",
                "description": "Protected endpoint. Requires Bearer JWT token.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile",
                        "schema": {
                            "$ref": "#/definitions/ProfileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        }
    },
    "definitions": {
        "HelloResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "hello world"
                }
            }
        },
        "RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "format": "password",
                    "example": "secret123"
                }
            }
        },
        "RegisterResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                }
            }
        },
        "LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "format": "password",
                    "example": "secret123"
                }
            }
        },
        "AuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1Ni..."
                }
            }
        },
        "ProfileResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                }
            }
        }
    }
}